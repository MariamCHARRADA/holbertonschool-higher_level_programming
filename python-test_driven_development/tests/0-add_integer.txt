def add_integer(a, b=98):
    """
    Adds two integers a and b.

    Args:
    a (int or float): The first number.
    b (int or float): The second number (default is 98).

    Returns:
    int: The addition of a and b, as an integer.

    Raises:
    TypeError: If a or b is not an integer or float.

    Examples:
    >>> add_integer(2, 3)
    5

    >>> add_integer(2.0, 3)
    5

    >>> add_integer(-2, 3)
    1

    >>> add_integer(5, -2)
    3

    >>> add_integer(2, -5)
    -3

    >>> add_integer(2)
    100

    >>> add_integer(4, "School")
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> add_integer("School", 4)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

    >>> add_integer(1, float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer
    """

    if type(a) not in (int, float):
        raise TypeError("a must be an integer")
    if type(b) not in (int, float):
        raise TypeError("b must be an integer")
    return int(a) + int(b)
